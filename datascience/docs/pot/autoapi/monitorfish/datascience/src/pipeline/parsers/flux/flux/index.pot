# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Vincent Chéry
# This file is distributed under the same license as the Monitorfish package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Monitorfish \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-16 17:20+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:2
#: bebe1069298f4613b6ffe0703a4b6edb
msgid ":py:mod:`monitorfish.datascience.src.pipeline.parsers.flux.flux`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:8
#: 34c7bef60c3d4ca4bd1aa72a948f5dd2
msgid "Module Contents"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:11
#: 658477a8611c4872bdd42b70ea8f2465
msgid "Classes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:19:<autosummary>:1
#: 70bb40716d1541119ef9f08d003ee8b2
msgid ":py:obj:`FluxFAReportDocumentType <monitorfish.datascience.src.pipeline.parsers.flux.flux.FluxFAReportDocumentType>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:19:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:19:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:58
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:77
#: 3a40c971ad154ab69b71e1d458d3af86
#: ab51f996239b401598503b384052c1e5
#: 2a98c1b1414143479145ad6416ad0bc3
#: 4666383e6bd34c0d8af85119b8914c3c
msgid "Generic enumeration."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:19:<autosummary>:1
#: 1863fac27fcf40069e9860ffad2a8381
msgid ":py:obj:`FluxFishingActivityType <monitorfish.datascience.src.pipeline.parsers.flux.flux.FluxFishingActivityType>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:21
#: 9be1168fae094e64b78ae02325b834b0
msgid "Functions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: e74de3425c624bf7943f2e2816c6fa61
msgid ":py:obj:`get_fishing_activity_type <monitorfish.datascience.src.pipeline.parsers.flux.flux.get_fishing_activity_type>`\\ \\(fishing\\_activity\\: xml.etree.ElementTree.Element\\) → FluxFishingActivityType"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 6bb28bb03aa346b8a70eeea9c68c61db
msgid ":py:obj:`get_fa_report_type <monitorfish.datascience.src.pipeline.parsers.flux.flux.get_fa_report_type>`\\ \\(fa\\_report\\_document\\: xml.etree.ElementTree.Element\\) → FluxFAReportDocumentType"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 703c40921fc64d3fb0d8561848539e87
msgid ":py:obj:`get_log_type <monitorfish.datascience.src.pipeline.parsers.flux.flux.get_log_type>`\\ \\(fishing\\_activity\\: xml.etree.ElementTree.Element\\, report\\_type\\: FluxFAReportDocumentType\\) → str"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 12f9324562ce44a2b2e9422f3b256bb4
msgid ":py:obj:`get_operation_type <monitorfish.datascience.src.pipeline.parsers.flux.flux.get_operation_type>`\\ \\(xml\\_element\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: be8fcfead0c74e68bfd97db0f4bfcbb1
msgid ":py:obj:`parse_metadata <monitorfish.datascience.src.pipeline.parsers.flux.flux.parse_metadata>`\\ \\(fa\\_report\\_document\\: xml.etree.ElementTree.Element\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 89ba44b9217548ec898524dea3674d48
msgid ":py:obj:`parse_fa_report_document <monitorfish.datascience.src.pipeline.parsers.flux.flux.parse_fa_report_document>`\\ \\(fa\\_report\\_document\\: xml.etree.ElementTree.Element\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 2b75acffd2204c3c84e2c06c4feaf912
msgid ":py:obj:`parse_specified_fishing_activity <monitorfish.datascience.src.pipeline.parsers.flux.flux.parse_specified_fishing_activity>`\\ \\(fishing\\_activity\\: xml.etree.ElementTree.Element\\, report\\_type\\: FluxFAReportDocumentType\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: c6e66fee23584f6a815e836119040a41
msgid ":py:obj:`get_list_fa_report_documents <monitorfish.datascience.src.pipeline.parsers.flux.flux.get_list_fa_report_documents>`\\ \\(fa\\_report\\_message\\: xml.etree.ElementTree.Element\\) → List\\[xml.etree.ElementTree.Element\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: edfd1a81e99a4936b4bb9cbc78601df8
msgid ":py:obj:`base64_decode <monitorfish.datascience.src.pipeline.parsers.flux.flux.base64_decode>`\\ \\(fa\\_report\\_message\\_string\\: str\\) → str"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 5fff8f8cd1f44434aa9d67fa8ffae40d
msgid "Takes a string that represents the content of an xml message of the FLUX format"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 612edc09ba2a49caa28bf3b2863f50da
msgid ":py:obj:`parse_fa_report_message_string <monitorfish.datascience.src.pipeline.parsers.flux.flux.parse_fa_report_message_string>`\\ \\(fa\\_report\\_message\\_string\\: str\\) → Tuple\\[str\\, List\\[dict\\]\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: 5c61ffdc12774deb82d77d4289c61372
msgid ":py:obj:`batch_parse <monitorfish.datascience.src.pipeline.parsers.flux.flux.batch_parse>`\\ \\(fa\\_report\\_message\\_strings\\: List\\[str\\]\\) → dict"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:38:<autosummary>:1
#: d09a99f16c5d4271b7acbf010239505e
msgid "Parses a list of FLUX messages and returns a dictionnary with the information"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:40
#: c9125fc349c047468d7b1d5f86b8a64c
msgid "Attributes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:46:<autosummary>:1
#: f880246f42224798b33234aa4bf983bb
msgid ":py:obj:`specified_fishing_activity_parsers <monitorfish.datascience.src.pipeline.parsers.flux.flux.specified_fishing_activity_parsers>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:49
#: 75f3035526df4dc5bdba78e3a3613917
msgid "Bases: :py:obj:`Exception`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:51
#: 418483f6832e40d3afc672c0a96a3234
msgid "Raised when an FLUX message cannot be parsed."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:56
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:75
#: 498fd8d7ef754f19b417964e20c50a4b
#: a0f1339369be4f2cbdd4defa285ab21e
msgid "Bases: :py:obj:`enum.Enum`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:60
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:79
#: 09e47da3bcd64a04a4cf7a68e5879e6f
#: b496e234a0484af789e07a231cd12d84
msgid "Derive from this class to define new enumerations."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:183
#: 8f76819ed27d4521b65aac98815e8e3d
msgid "Takes a string that represents the content of an xml message of the FLUX format that may be base64-encoded and wrapped in an outer `BASE64DATA` xml tag (or not), and returns the decoded message. If the input message is not base64-encoded, simply return the unmodified input."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:0
#: 2c0f1a224c1d4fc6a5f7b6918540a210
#: 5b6cf51d1342422bbddc773aeb9d7aa4
msgid "Parameters"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:188
#: 7e5d93e8a6dc4536a043f04c0dc3a8d7
msgid "FLUX message string, possibly base64-encoded and wrapped in a `BASE64DATA` xml tag."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:0
#: 60b59bd710694314bd541df5d43d9e28
msgid "Raises"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:192
#: 85407a33b2d14297b8103c4eb3a77f69
msgid "`FLUXParsingError` if the input string is not valid xml or its root tag is unexpected."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:0
#: b1661b7c50b74d1c91a7e4c856ca7979
#: 4c6fe7bcfb3944049ef412408db6ff1a
msgid "Returns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:195
#: da1c4927a53c44c48a302572c9f1c3d8
msgid "decoded FLUX message, ready for parsing and data extraction"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:0
#: a9c15f7c42d2476cb7dc4c2a2f0a166e
#: 1aae8570e9d3479a9dc6842cc12dd34c
msgid "Return type"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:204
#: d9d6c66fb6cf40309c22c7c8b913b937
msgid "Parses a list of FLUX messages and returns a dictionnary with the information extracted from the messages."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:207
#: be4f2d04ddda48d88832e932e35d15e1
msgid "list of FLUX xml documents, some of which may be BASE64 encoded"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:211
#: 5e47f63253ca4623bd6aee07d220f24f
msgid "dictionnary with 3 elemements:    - logbook_reports pd.DataFrame: Dataframe with parsed data   - logbook_raw_messages (pd.DataFrame):  Dataframe with the original xml     messages   - batch_generated_errors (boolean): `True` if an error occurred during the     treatment of one or more of the messages"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:213
#: 41c5a0725ae4408e9a31a4a9270f30ab
msgid "dictionnary with 3 elemements:"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:215
#: 9246bf7080284836b652e6bfe60bd3cc
msgid "logbook_reports pd.DataFrame: Dataframe with parsed data"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:216
#: 8fe1fff2902948aeb3f56ab569f0116f
msgid "logbook_raw_messages (pd.DataFrame):  Dataframe with the original xml messages"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/flux/flux/index.rst:218
#: eb883d01b12540c088e80b28ec86196d
msgid "batch_generated_errors (boolean): `True` if an error occurred during the treatment of one or more of the messages"
msgstr ""
