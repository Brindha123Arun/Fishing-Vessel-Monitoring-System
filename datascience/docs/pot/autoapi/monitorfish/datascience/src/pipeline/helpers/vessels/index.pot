# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Vincent Chéry
# This file is distributed under the same license as the Monitorfish package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Monitorfish \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-16 17:20+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:2
#: ebce201a2414410d8893b7c8e0a36ea4
msgid ":py:mod:`monitorfish.datascience.src.pipeline.helpers.vessels`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:8
#: 7196563bec4d436aa7d84135f17cd392
msgid "Module Contents"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:12
#: 01baaba68a4543189c2ebed7291c6fa1
msgid "Functions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:21:<autosummary>:1
#: 5c1ec10a4f804bbcb37d5de8cad7caea
msgid ":py:obj:`make_add_vessels_columns_query <monitorfish.datascience.src.pipeline.helpers.vessels.make_add_vessels_columns_query>`\\ \\(vessel\\_ids\\: list\\, vessels\\_table\\: sqlalchemy.Table\\, vessels\\_columns\\_to\\_add\\: list \\= None\\, districts\\_table\\: sqlalchemy.Table \\= None\\, districts\\_columns\\_to\\_add\\: list \\= None\\) → sqlalchemy.sql.Select"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:21:<autosummary>:1
#: 1f4dc38f2a244c118a7e475e4f8be2e3
msgid "Creates a `sqlalchemy.select` statement representing a query to fetch the"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:21:<autosummary>:1
#: 1f280fdcac6842b99cf72d439df40875
msgid ":py:obj:`make_find_vessels_query <monitorfish.datascience.src.pipeline.helpers.vessels.make_find_vessels_query>`\\ \\(vessels\\: pandas.DataFrame\\, vessels\\_table\\: sqlalchemy.Table\\) → sqlalchemy.sql.Select"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:21:<autosummary>:1
#: 80abb5e18b9e4a7d807367b9d90b9dff
msgid "Creates a `sqlalchemy.select` object representing a query to find `vessels` in"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:21:<autosummary>:1
#: 396be2177cf742a585863f8326532075
msgid ":py:obj:`merge_vessel_id <monitorfish.datascience.src.pipeline.helpers.vessels.merge_vessel_id>`\\ \\(vessels\\: pandas.DataFrame\\, found\\_vessels\\: pandas.DataFrame\\, logger\\: logging.Logger\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:21:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:70
#: 77d7598da9134212b7a3839317518988
#: 5d80a10998d04ba284404d6fee792c57
msgid "The two input DataFrames are assumed to be:"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:24
#: 9c628af1650d4aa9a56a5e055835aa45
msgid "Creates a `sqlalchemy.select` statement representing a query to fetch the designated columns from the `vessels` and / or `districts` tables for the indicated `vessel_ids`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: 2a7337a4f4024a67a267b69846fc6d9e
#: d48f1b6a8b9c41dab7b648a3962bc9cb
#: 21df5960466342849fc91cdb5e582c03
msgid "Parameters"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:28
#: 9c960c55e5784f6088086f5245eb13f5
msgid "List of vessels `id` to fetch data for."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:30
#: 7ac218b016d044e1bb06c30fc9a1bc96
msgid "vessels table."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:32
#: 334a177b9bc54186ac543dde94408eba
msgid "List of columns to get from the `vessels` table. Defaults to None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:35
#: 90ce4a7ac14c45a4ba50a0050f2d4659
msgid "districts table. Must be supplied if `districts_columns_to_get` is given. Defaults to None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:38
#: ff3a6b19164641b29321a131dc16a40f
msgid "List of columns to get from the `districts` table. Defaults to None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: aca3b0e4150b404fbbb52b1290e8dbf6
#: bcbcecd421cd4b94ba90472092497fa4
#: 92a0ba407cad4c45b56407dba71dcf3e
msgid "Returns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:42
#: c585d5cf7a404f60bad369e4c9fc8aa7
msgid "select statement to execute to get the indicated data."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:0
#: 0cde15403737450b9a3115c1a9fcaca2
#: f89b16c7cd1a451db04b4e5bc31f11e0
#: d3be715e9e6f423ca1ccee3941e42220
msgid "Return type"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:48
#: e7b4153b48e7430e8cd23e3d2b3cb5b6
msgid "Creates a `sqlalchemy.select` object representing a query to find `vessels` in the `vessels` table that match any of the lines in the input `DataFrame` on any of `cfr`, `ircs` or `external_immatriculation`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:52
#: 4f5c9b5ee4294782b6eb4d3422e978bc
msgid "`DataFrame`. Must have columns `cfr`, `ircs` and `external_immatriculation`. If any other columns are present they are ignored."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:56
#: 5939315897ec459b9ad1e7c41c3fc0eb
msgid "`sqlalchemy.Table` object representing the `vessels` table. Must have columns `cfr`, `ircs` and `external_immatriculation`. If any other columns are present they are ignored."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:61
#: 44dcac69da7d4bf5a3e34ebc099a5dd2
msgid "query object with columns `vessel_id`, `cfr`, `ircs` and   `external_immatriculation`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:63
#: 58d3fe5abb0e4d629ee688b70d1ba0fb
msgid "query object with columns `vessel_id`, `cfr`, `ircs` and"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:64
#: 2e8185f8ed004b87acbea8f82916a607
msgid "`external_immatriculation`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:72
#: f9fcc4f0308144bcb70da2699d6deb61
msgid "a list of vessels with `cfr`, `ircs` and `external_immatriculation` identifiers (plus potential other columns) without a `vessel_id` column"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:74
#: 05e2b4c7f253447c96df4eef9eabd735
msgid "a list of vessels with `cfr`, `ircs` and `external_immatriculation` and `vessel_id` columns (and no other columns). Typically these are the vessels that are found in the `vessels` table that match one of the identifiers of the `vessels` DataFrame by the `make_find_vessels_query` query."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:79
#: 513dc5cd4cc749d7be987b4c65182cc0
msgid "The idea is to add the `vessel_id` from the second DataFrame as a new column in the first DataFrame, by matching the right lines in both DataFrame."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:82
#: 8f27684eb0aa4515a2e01e978c11780f
msgid "This is done by perfoming a left join of the input DataFrames using join_on_multiple_keys on [\"cfr\", \"ircs\", \"external_immatriculation\"]."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:85
#: fb57d185f2ad41d9849ddc13ee7f51ab
msgid "Additionnally, the returned `vessel_id` for each line in the first DataFrame is `None` if the following conditions are not met :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:88
#: 30223f69f1a84cd397ff915f0e4e936b
msgid "there is no ambiguity: only one vessel in the second DataFrame can be matched to a given line in the first DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:90
#: 342d3f061ac5449484ccacccf764f857
msgid "there is no conflict: at most one vessel in the first DataFrame can be matched to a given line in the second DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:93
#: 263e3f4b6cdd4b3e806c0c4081065f36
msgid "Lines in the second DataFrame that do not match a line in the first DataFrame are absent from the result."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:96
#: 1d934faa78144953ae4203be79a26c71
msgid "Lines in the first DataFrame that do not match a line in the second DataFrame are present in the result with a `vessel_id` of `None`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:99
#: aca7e6a4b9fa4035857cae15b7f28c8b
msgid "The result always has exactly the same lines as the first input DataFrame."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:101
#: 3df6e0d83d234686b811ebd8ee3fac52
msgid "Vessels to match to a found_vessel"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:103
#: 0aadfe35b34c4646bcbf24ba93fa790f
msgid "found_vessels to match to a vessel"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:105
#: 09edd454503643f4936c16fcc154fa03
msgid "Logger instance"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/vessels/index.rst:108
#: ecdf4c973bde401b9e0cdf60483dfc9a
msgid "Same as vessels with an added `vessel_id` column."
msgstr ""
