# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Vincent Ch√©ry
# This file is distributed under the same license as the Monitorfish package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Monitorfish \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-16 17:20+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:2
#: bf25405527784f0bbdc45a766ade82b7
msgid ":py:mod:`monitorfish.datascience.src.pipeline.parsers.utils`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:8
#: 9731bdd210dd482380dbe4bf8a55377c
msgid "Module Contents"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:12
#: 5a195e3a946845d19e3b38738ff0e0b0
msgid "Functions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: 3565e44757db47288806c7014e4e74bb
msgid ":py:obj:`remove_namespace <monitorfish.datascience.src.pipeline.parsers.utils.remove_namespace>`\\ \\(tag\\: str\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:28
#: 309d7b866b1c4a9880d0c034e7f0578c
#: cc2fe5a9cc974403bf3f1c7033ee0cf4
msgid "Removes xmlns from tag string."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: 43f94993010c4519a568e1cfb9bdcba8
msgid ":py:obj:`get_root_tag <monitorfish.datascience.src.pipeline.parsers.utils.get_root_tag>`\\ \\(xml\\_element\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: 8a9d6197825f40909f11bd34803df2ed
msgid ":py:obj:`try_float <monitorfish.datascience.src.pipeline.parsers.utils.try_float>`\\ \\(s\\: str\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: 4e935500320a4999afe0e359432c4c00
msgid ":py:obj:`get_first_child <monitorfish.datascience.src.pipeline.parsers.utils.get_first_child>`\\ \\(xml\\_element\\, assert\\_child\\_single\\=True\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: ee1180a18dfe416d8402c52fa21a172e
msgid ":py:obj:`tagged_children <monitorfish.datascience.src.pipeline.parsers.utils.tagged_children>`\\ \\(el\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: 2d4648e8c6114b3896574dc83f0ab083
msgid ":py:obj:`make_datetime <monitorfish.datascience.src.pipeline.parsers.utils.make_datetime>`\\ \\(date\\: str\\, time\\: Union\\[str\\, None\\] \\= None\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: c7ac597f6762438e8b1057ff6d8294a4
msgid "Takes date a \"2020-12-24\" string and, optionnally, a time \"16:49\" string,"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: 51916fa6fc0f4a139e64dfffb38f7619
msgid ":py:obj:`make_datetime_json_serializable <monitorfish.datascience.src.pipeline.parsers.utils.make_datetime_json_serializable>`\\ \\(date\\: str\\, time\\: Union\\[str\\, None\\] \\= None\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:25:<autosummary>:1
#: 42676cc6d5094ed08e4a746af21a57c3
msgid "Returns a serialized (string) datetime object make from a ISO format date string"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:31
#: 8763970dbef14a19ad3fde532a3256d7
msgid "Examples"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:51
#: 91243f9cb5be40b599a124a215bc8e83
msgid "Takes date a \"2020-12-24\" string and, optionnally, a time \"16:49\" string, Returns a datetime object"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:57
#: 2a353b6a600643beb7ec2f350991b5cb
msgid "Returns a serialized (string) datetime object make from a ISO format date string and an optional time string."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:0
#: c914ced8f9994df3aea51b97c409284a
msgid "Parameters"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:60
#: 9a65871c0aca4c46a921b0e3b03efdd8
msgid "ISO format date string. Egg:= '2021-10-25'"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:62
#: 9b2e08bf45544f529f7fc57d0f0856ce
msgid "ISO format time string Egg '12:00'. Defaults to None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:0
#: 3e4624476f574f6faf1a5f47f75f5672
msgid "Returns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:66
#: 5eb50bf29594470897c01b07f4fc8335
msgid "[description]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/parsers/utils/index.rst:0
#: 73956d16577041d3a0ada2937557dec1
msgid "Return type"
msgstr ""
