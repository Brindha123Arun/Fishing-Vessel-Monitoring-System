# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Vincent Chéry
# This file is distributed under the same license as the Monitorfish package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Monitorfish \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-16 17:20+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:2
#: 2989e2da77e345dc9a5f6440a537f425
msgid ":py:mod:`monitorfish.datascience.src.pipeline.flows.logbook`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:8
#: c9625e7f4f2245a48b8322184406fcd4
msgid "Module Contents"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:11
#: 778c79d9d72143d083de40bfac0bcab2
msgid "Classes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:19:<autosummary>:1
#: 33e3f9b17f9e4495a2096734fa88be94
msgid ":py:obj:`LogbookZippedFileType <monitorfish.datascience.src.pipeline.flows.logbook.LogbookZippedFileType>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:19:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:19:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:65
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:89
#: 8f669ff919c14241a2491f2262339b1f
#: b5c54abff82e454b834061094a3b4c0e
#: d9059e9c38df4c2da1b3bb93d1a8fd98
#: e8c39b25a86a41d5834b814eaf31b567
msgid "Generic enumeration."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:19:<autosummary>:1
#: ba7e078fd70242a9a83a1ee5af422938
msgid ":py:obj:`LogbookTransmissionFormat <monitorfish.datascience.src.pipeline.flows.logbook.LogbookTransmissionFormat>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:21
#: d550023c3b2e4f8f9bcd90e7883c385e
msgid "Functions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: 32d0b3d2d6c647469e231ee2fa743e25
msgid ":py:obj:`get_logbook_zipped_file_type <monitorfish.datascience.src.pipeline.flows.logbook.get_logbook_zipped_file_type>`\\ \\(zipfile\\_name\\: str\\) → LogbookZippedFileType"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: 2dfa4cc788b9473b8b7363f5617e3fd1
msgid "Takes a zipfile name like UN_JBE202001123614.zip or ERS3_ACK_JBE202102365445.zip"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: 24a2c70fac8448338e81c6b2ad8846eb
msgid ":py:obj:`extract_zipfiles <monitorfish.datascience.src.pipeline.flows.logbook.extract_zipfiles>`\\ \\(input\\_dir\\: pathlib.Path\\, treated\\_dir\\: pathlib.Path\\, error\\_dir\\: pathlib.Path\\) → List\\[dict\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: 0973a93a8d0140f69c37d280937dd375
msgid "Scans `input_dir`, in which logbook zipfiles are expected to be arranged in a"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: 23250271b23e4b719a2ad7a6be122ffc
msgid ":py:obj:`extract_xmls_from_zipfile <monitorfish.datascience.src.pipeline.flows.logbook.extract_xmls_from_zipfile>`\\ \\(zipfile\\: Union\\[None\\, dict\\]\\) → Union\\[None\\, dict\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:192
#: d742e0c1756940eb85f35294cb30e4bf
#: 989d2ee55294448d83d9f3d7a7bb9e60
msgid "Takes a `dict` with the following structure :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: 0c0fedf96de341769c73acd32323ae10
msgid ":py:obj:`parse_xmls <monitorfish.datascience.src.pipeline.flows.logbook.parse_xmls>`\\ \\(zipfile\\: Union\\[None\\, dict\\]\\) → Union\\[None\\, dict\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: f635ffb834be43c1b11fb227fb0b79fb
msgid ":py:obj:`clean <monitorfish.datascience.src.pipeline.flows.logbook.clean>`\\ \\(zipfile\\: Union\\[None\\, dict\\]\\) → Union\\[None\\, dict\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: 9bf697feba4849a3a8e6b2736fefd7e3
msgid ":py:obj:`load_logbook_data <monitorfish.datascience.src.pipeline.flows.logbook.load_logbook_data>`\\ \\(cleaned\\_data\\: List\\[dict\\]\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:33:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:226
#: 29c6813ceb9748bdb21db24cf06024a1
#: f350459e42ec44f4aa780993b6b1bce7
msgid "Loads logbook data into public.logbook_reports and public.logbook_raw_messages tables."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:35
#: cf92720395f94acd91878790003178ba
msgid "Attributes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:45:<autosummary>:1
#: c29316e1e79e4fcbb1d43e3d54086d84
msgid ":py:obj:`RECEIVED_DIRECTORY <monitorfish.datascience.src.pipeline.flows.logbook.RECEIVED_DIRECTORY>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:45:<autosummary>:1
#: 61c0504449fd4ef493028d258eed34b0
msgid ":py:obj:`TREATED_DIRECTORY <monitorfish.datascience.src.pipeline.flows.logbook.TREATED_DIRECTORY>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:45:<autosummary>:1
#: 8cdfbd72fa9c4183bf68efc93c34a548
msgid ":py:obj:`ERROR_DIRECTORY <monitorfish.datascience.src.pipeline.flows.logbook.ERROR_DIRECTORY>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:45:<autosummary>:1
#: b6f6e12466484b9aab26f75808a8c852
msgid ":py:obj:`flow_not_running <monitorfish.datascience.src.pipeline.flows.logbook.flow_not_running>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:45:<autosummary>:1
#: 9a43f0e1218a4d90aca85549ed1f44a8
msgid ":py:obj:`file_name <monitorfish.datascience.src.pipeline.flows.logbook.file_name>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:63
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:87
#: d50c431cc7624a10b27f7efaa74582d7
#: b70f11dffdf04856bfb1842fc80b522c
msgid "Bases: :py:obj:`enum.Enum`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:67
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:91
#: 778939ae3a2b4e59a3b1a8b8d5e53c98
#: 458d7b45d24846cf8becd2a7d9c41937
msgid "Derive from this class to define new enumerations."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:110
#: 214c24bac9b24fb4be4a4f87bee86d04
msgid "Takes a zipfile name like UN_JBE202001123614.zip or ERS3_ACK_JBE202102365445.zip and returns the coresponding `LogbookZippedFileType`, based on pattern matching."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:113
#: e6bf5b5d4def495f95631ce5e7c27b24
msgid "The expected pattern is of the form"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:115
#: 536c77a9c9d14538bfd14fcd333a5f8c
msgid "`<prefix>_JBE<YYYYMMXXXXXX>.zip`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:117
#: 7d35ffc1337a4f24aad321ac9ee329a3
msgid "where :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:119
#: 5fa64ee0816e4cea9572646abbafb7d6
msgid "prefix is one of the `LogbookZippedFileType` enum values"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:120
#: 7738349ad75c42e5b841f0ee702230cc
msgid "Y, M and X are digits"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: 2daf29eb0f5a4398b40be7a457f95991
#: 1ca6402fe2f245738e9418d4315ea543
#: d8633e0405f148679d9e001409bae0f9
#: ec9789413024452bacfd2d9ec32a2735
msgid "Parameters"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:122
#: cdb3c7992b034ccc8d7a19e5749212a0
msgid "name of a zipfile containing logbook data."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: bf5fa91e35fb496894b04c1c30c065b1
#: 5e0d0b02075e4001a45077defe85c0ab
#: f4e11bcb39954594a6f69d43546a1111
msgid "Returns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:125
#: d62c3f5869ca4ac8a475aeca97e693e9
msgid "the type of data corresponding to the name of the   zipfile"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:127
#: 8676f66debf84dd4a0f91b56e5196b55
msgid "the type of data corresponding to the name of the"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:128
#: 1600314a2fb847918dfe1b9401584547
msgid "zipfile"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: e6640b31dfb34966ae51dff25da0ca37
#: fe71a5774b174ea1a5cbb39015eea85f
#: a6843b266d454658997509edad4107e6
msgid "Return type"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:0
#: 38aaf08b82f74feba1e64968ec631f30
msgid "Raises"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:131
#: 3e722d7739bb47708afb148d6ca58bb8
msgid "if the name does not match the expected pattern or the matched string does not correspond to a known `LogbookZippedFileType`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:135
#: 0a8bda4e988b4324abbf589b4505a6df
msgid "Examples"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:148
#: 883cd3fa03e64b37b6156ef7495be4f6
msgid "Scans `input_dir`, in which logbook zipfiles are expected to be arranged in a hierarchy of folders like by year / month / zipfiles, and returns a list of `dict` that describe the zipfiles found."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:152
#: b1263580e6c243c0ba7253244cd2d70e
msgid "Files whose name does not match the expected pattern (see `get_logbook_zipped_file_type` for details) are moved to `error_dir`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:155
#: eae1b21f6cc84fd7b52cad6a301be50a
msgid "Files located in `input_dir` but whose location does not match the expected year / month hierarchy of subfolders are ignored."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:158
#: ea110049487049399d87aff5e7396da8
msgid "location of input zipfiles. Zipfiles are expected to be organized in subfolers inside this directory :    - by year   - by month, inside yearly subfolders"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:158
#: cbb28181bf4e4be98107f2a0892384e5
msgid "location of input zipfiles. Zipfiles are expected to be organized in subfolers inside this directory :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:161
#: 731f10dba0f14556a0321d8f63b5aa16
msgid "by year"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:162
#: dab898b307bb472ba6813b43d9d716a5
msgid "by month, inside yearly subfolders"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:164
#: 9180527b15db43fdb20b0703186d13ed
msgid "directory where zipfiles are to be transfered after integration into the monitorfish database"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:167
#: 8a6849836f0c405091c8d2a2bc937855
msgid "directory where zipfiles are to be transfered if an error occurs during their treatment"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:171
#: 7b549e47ca4545019692876c98c988f2
msgid "list of `dict`, one for each of the found zipfiles. Each `dict` in   the list has the following elements :    - full_name (`str`): name of the zipfile, e.g.g. \"UN_JBE_202001999999.zip\"   - input_dir (`Path`): path of the folder container the zipfile (including     year/month)   - treated_dir (`Path`): path where the zipfile should be transfered to     after integration (year/month subfolder to the supplied `treated_dir`     argument)   - error_dir (`Path`): path where the zipfile should be transfered to     in case of error during its treatment (year/month subfolder to the supplied     `error_dir` argument)   - transmission_format (`LogbookTransmissionFormat`): transmission format,     inferred from the zipfile's name."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:185
#: 2091a2e8f989421ca4338b3defc63565
msgid "list of `dict`, one for each of the found zipfiles. Each `dict` in"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:174
#: 119395b842e94a42af5ceb6002bfb17f
msgid "the list has the following elements :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:176
#: 83b7f338a5d64db6b73279a97867165c
msgid "full_name (`str`): name of the zipfile, e.g.g. \"UN_JBE_202001999999.zip\""
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:177
#: 40999f27e54245d2be89e3121864345b
msgid "input_dir (`Path`): path of the folder container the zipfile (including year/month)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:179
#: 63765e3e984d4fb19e319f68f0d33a42
msgid "treated_dir (`Path`): path where the zipfile should be transfered to after integration (year/month subfolder to the supplied `treated_dir` argument)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:182
#: 015dbb6ae641444aa7edcbca48e124d6
msgid "error_dir (`Path`): path where the zipfile should be transfered to in case of error during its treatment (year/month subfolder to the supplied `error_dir` argument)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:185
#: ca6a2aab9fe2419eaea3fefff53324b1
msgid "transmission_format (`LogbookTransmissionFormat`): transmission format, inferred from the zipfile's name."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:194
#: 81bbdf2a862f433cbc705e6263fe9118
msgid "full_name (`str`): name of the zipfile"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:195
#: 775098b282c041959f7931d98f98f435
msgid "input_dir (`Path`): path of the folder container the zipfile"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:196
#: ec2dbda96d1549bdaa3af1408fd3d4a3
msgid "treated_dir (`Path`): path where the zipfile is be transfered after integration"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:198
#: eb5155e754404b0c95efc9f075ce52b5
msgid "error_dir (`Path`): path where the zipfile should be transfered in case of error during its treatment"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:200
#: 52c0fc61884648509a5d16474c36b3ac
msgid "transmission_format (`LogbookTransmissionFormat`): transmission format"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:202
#: b0191154b5a843b39192255f195bbd4f
msgid "Opens the corresponding zipfile on the filesystem, reads the xml files it is expected to contain, puts the content of these xml files in a list of strings, then returns a copy of the input `dict` with an added `xml_messages` item that contains that list of strings."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:210
#: 22b4426e7f734ebea6c22499c830cfe5
msgid "Copy of the input `dict` with an additionnal `xml_messages`   item that contains the list of strings contained inside the zipfile   identified by the `input_dir` and `full_name` in the input dictionnary"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:213
#: 0824ade28e3b459db5dbae25a5d25294
msgid "Copy of the input `dict` with an additionnal `xml_messages`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:213
#: ca4177b4c9594f9e8b4008700a586c16
msgid "item that contains the list of strings contained inside the zipfile identified by the `input_dir` and `full_name` in the input dictionnary"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/logbook/index.rst:228
#: 0bc8fe3b72d84d87b73645cc2247a59e
msgid "list of dictionaries (output of `clean` task)"
msgstr ""
