# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Vincent Chéry
# This file is distributed under the same license as the Monitorfish package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Monitorfish \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-16 17:20+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:2
#: a2bde3132ea947f3bb3c7a53ee350fd1
msgid ":py:mod:`monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:8
#: 2558a50d278745869b2826d5ea449d43
msgid "Module Contents"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:12
#: 709a012658214a079172595c53b81489
msgid "Functions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: fc2cd2c6f1fc40868fb6a734cf3a227d
msgid ":py:obj:`extract_last_positions <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.extract_last_positions>`\\ \\(\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 83c0f26e01d741eab3feab9c53a54765
msgid "Extract the last emission date of each vessel in the `last_positions` table for"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 5d9db25046e948619d95eeee50e8b06d
msgid ":py:obj:`extract_known_malfunctions <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.extract_known_malfunctions>`\\ \\(\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:47
#: 6a36d28909f14fad91ee628ad7c415a9
#: fe1a02c3ff3e4edc9e15cf8d921c7153
msgid "Extract ongoing malfunctions in the `beacon_malfunctions` table."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: fe50ed19a2874c418db32e3b1b1ef974
msgid ":py:obj:`extract_vessels_that_should_emit <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.extract_vessels_that_should_emit>`\\ \\(\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: b8065338713346418cce282778b21b68
msgid "Extract vessels from the `vessels` table that have a beacon associated to them"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 25ec8ebbb00d40e58b39f801e2cbf7c6
msgid ":py:obj:`extract_satellite_operators_statuses <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.extract_satellite_operators_statuses>`\\ \\(\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 6852aff57d9645db8583a936c53bea01
msgid "Extract satellite operators statuses from the `satellite_operators_statuses` view."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: e62c1a41e5b74d44b1aa48249aadfea7
msgid ":py:obj:`get_last_emissions <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.get_last_emissions>`\\ \\(vessels\\_that\\_should\\_emit\\: pandas.DataFrame\\, last\\_positions\\: pandas.DataFrame\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 03386cd1c65b46a79221d581d1d50dd4
msgid "Join `vessels_that_should_emit` and `last_positions` using `cfr`, `ircs` and"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 5e1d86595946452d97e6c53d72462ccf
msgid ":py:obj:`get_new_malfunctions <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.get_new_malfunctions>`\\ \\(last\\_emissions\\: pandas.DataFrame\\, known\\_malfunctions\\: pandas.DataFrame\\, satellite\\_operators\\_statuses\\: pandas.DataFrame\\, malfunction\\_datetime\\_utc\\_threshold\\_at\\_sea\\: datetime.datetime\\, malfunction\\_datetime\\_utc\\_threshold\\_at\\_port\\: datetime.datetime\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 48f09cd520ea492ba7ee2624cd85cf4b
msgid ":py:obj:`get_ended_malfunction_ids <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.get_ended_malfunction_ids>`\\ \\(last\\_emissions\\: pandas.DataFrame\\, known\\_malfunctions\\: pandas.DataFrame\\, malfunction\\_datetime\\_utc\\_threshold\\_at\\_sea\\: datetime.datetime\\) → Tuple\\[list\\, list\\, list\\, list\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: dc0009f5b7b342f19059a6f92e5cee3f
msgid ":py:obj:`prepare_new_beacon_malfunctions <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.prepare_new_beacon_malfunctions>`\\ \\(new\\_malfunctions\\: pandas.DataFrame\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: fd718297e40942029ccf5e3b02aee6d3
msgid ":py:obj:`load_new_beacon_malfunctions <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.load_new_beacon_malfunctions>`\\ \\(new\\_beacon\\_malfunctions\\: pandas.DataFrame\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 62e0b76e6a0f4b46afd1668c2dc2f41e
msgid ":py:obj:`update_beacon_malfunction <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.update_beacon_malfunction>`\\ \\(beacon\\_malfunction\\_id\\: int\\, \\*\\, new\\_stage\\: src.pipeline.entities.beacon\\_malfunctions.BeaconMalfunctionStage \\= None\\, new\\_vessel\\_status\\: src.pipeline.entities.beacon\\_malfunctions.BeaconMalfunctionVesselStatus \\= None\\, end\\_of\\_malfunction\\_reason\\: src.pipeline.entities.beacon\\_malfunctions.EndOfMalfunctionReason \\= None\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:99
#: d8f808093ed14d7fa1c05f85a8106fa0
#: cf52f14fc6bc47a9b8c1962924c4c486
msgid "Update a `beacon_malfunction` stage or vessel status."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:29:<autosummary>:1
#: 52c0c5a950384439b3b3e38c76365c28
msgid ":py:obj:`request_notification <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.request_notification>`\\ \\(beacon\\_malfunction\\_id\\: int\\, requested\\_notification\\: src.pipeline.entities.beacon\\_malfunctions.BeaconMalfunctionNotificationType\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:31
#: 7720972ab48844bcb46a1dcec5e06266
msgid "Attributes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:38:<autosummary>:1
#: 2d2e717cb2924759ab1ccaf2a9ddb728
msgid ":py:obj:`flow_not_running <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.flow_not_running>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:38:<autosummary>:1
#: c8d2b390f4094679955c8ac847d6af39
msgid ":py:obj:`file_name <monitorfish.datascience.src.pipeline.flows.update_beacon_malfunctions.file_name>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:41
#: 1e52290571bd441383b0cd9153c255ff
msgid "Extract the last emission date of each vessel in the `last_positions` table for certain flag states."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:52
#: 2b93e3042d9b48778c47d48639bbaeef
msgid "Extract vessels from the `vessels` table that have a beacon associated to them with a status of `ACTIVATED` or `UNSUPERVISED` and with a flag_state that must be monitored."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:59
#: 02a069bd49804ddd8b2f8d00c0505a4f
msgid "Extract satellite operators statuses from the `satellite_operators_statuses` view. This is intended to be used to filter which beacon malfunction to create and / or : when a satellite operator is down, we do not want to generate malfunctions for all the beacons of this operator, we want to wait until data flows are up again."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:67
#: c810cbb143d7477d8b0709d3f86c2c96
msgid "Join `vessels_that_should_emit` and `last_positions` using `cfr`, `ircs` and `external_immatriculation` as join keys, using the `join_on_multiple_keys` logic."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:70
#: c083484a5f5546a2bd7b5d5110e9ec86
msgid "`last_positions` of a given vessel that were emitted before the vessel's beacon `logging_datetime_utc` are not taken into account : the result therefore only includes each vessel's last emission **with its current beacon**. Ths is done to avoid generating beacon malfunctions on a given vessel from emission data of its previous beacon."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:0
#: 2c06d61111d047e0b6fde5465253200f
#: a69ea0feae0642349beffb086b48b3f7
msgid "Parameters"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:76
#: 08b5bee1bedc43ae9a71e9acb36bacbd
msgid "DataFrame of vessels that should emit"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:78
#: 90b839e88bd44a46a770b3a8c8aa01d1
msgid "DataFrame of last positions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:0
#: c7162ee8afe14b5cad8da6580782bea2
msgid "Returns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:81
#: 20fd90055e07476b9957c5c1d8f4dc68
msgid "last emissions of the input vessels with their current beacon"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:0
#: 97b1c686428b4521b34876b32d2ba8a7
msgid "Return type"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:101
#: 9c4122ea18ac4a8abd0712e08a9b297c
msgid "Exactly one of `new_state` or `new_vessel_status` must be provided"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:102
#: 59b26e71977c468aaf3ebad42b4b0923
msgid "`end_of_malfunction_reason` must be provided if `new_stage` is provided and is equal to `END_OF_MALFUNCTION`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:104
#: 965e36dcaf8d4a8688dfe4d3cd30921d
msgid "`end_of_malfunction_reason` cannot be be provided when `new_vessel_status` is provided"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:107
#: 292778b2bacb4bcfa6771ac78603d810
msgid "id of the beacon_malfunction to update"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:109
#: 0f49b6aec63443498bb6fc47f39c3704
msgid "stage to move the beacon malfunction to. Defaults to None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:112
#: 2a1253332ec54635b32620c0bc5288a9
msgid "vessel_status to move the beacon malfunction to. Defaults to None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:115
#: ae6809c1e6fd4b1aaa52fd2779d17e45
msgid "reason that led to the end of the malfunction. Defaults to None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:0
#: cf1f5a096af6462aaa05fcca133d94cc
msgid "Raises"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:119
#: 3d5c557467c245008928acf28b81dfe5
msgid "in the following cases :  - both `new_stage` and `new_vessel_status` are provided - both `new_stage` and `new_vessel_status` are null - `new_stage` is `END_OF_MALFUNCTION` and no `end_of_malfunction_reason` is   provided - an `end_of_malfunction_reason` is provided along with a `new_vessel_status`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:119
#: 0c6e3b0a5d0f4bcb9a38960a6e1f4936
msgid "in the following cases :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:121
#: 270d768556b94f37b473058acc5d849e
msgid "both `new_stage` and `new_vessel_status` are provided"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:122
#: 2e315f4e3be14214a063c8ae1bba07ce
msgid "both `new_stage` and `new_vessel_status` are null"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:123
#: 63a9ce7bbe244384bc0787bfd96d745d
msgid "`new_stage` is `END_OF_MALFUNCTION` and no `end_of_malfunction_reason` is provided"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/flows/update_beacon_malfunctions/index.rst:125
#: e2e6ab1951c34a4db9bb61e138d249ea
msgid "an `end_of_malfunction_reason` is provided along with a `new_vessel_status`"
msgstr ""
