# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2021, Vincent Chéry
# This file is distributed under the same license as the Monitorfish package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Monitorfish\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-11-16 17:20+0100\n"
"PO-Revision-Date: 2022-11-16 16:46+0000\n"
"Language-Team: French (https://www.transifex.com/ministere-de-la-transition-ecologique-et-solidaire-1/teams/124045/fr/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr\n"
"Plural-Forms: nplurals=3; plural=(n == 0 || n == 1) ? 0 : n != 0 && n % 1000000 == 0 ? 1 : 2;\n"

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:2
#: 4c0101565a1f4f11b0aaad9a289e8424
msgid ":py:mod:`monitorfish.datascience.src.pipeline.helpers.spatial`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:8
#: fd5dd727b4a24d13af03a6699590feda
msgid "Module Contents"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:11
#: ec179162eb0d4cbb82fa51b428d686ae
msgid "Classes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:19:<autosummary>:1
#: 0ba4b1d1475a4c1c9de1df6ba5ddded4
msgid ""
":py:obj:`Position "
"<monitorfish.datascience.src.pipeline.helpers.spatial.Position>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:19:<autosummary>:1
#: 12ee194ccdf94bd3a0cc1cd449b25e38
msgid ""
":py:obj:`PositionRepresentation "
"<monitorfish.datascience.src.pipeline.helpers.spatial.PositionRepresentation>`\\"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:19:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:55
#: 82422adb320f436e90f2a96a73b57b34 a6a43c1a693e4accb313b3297fcb7dd8
msgid ""
"Representation of a position with latitude and longitude in human readable "
"format."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:21
#: 93ff026efd464bb6b5a14f96994c318b
msgid "Functions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 29ccdb1a379144149fafc401c171567a
msgid ""
":py:obj:`coordinate_to_dms "
"<monitorfish.datascience.src.pipeline.helpers.spatial.coordinate_to_dms>`\\ "
"\\(coord\\: float\\) → Tuple\\[int\\, float\\, int\\, int\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: c5265343657f4e11b933c1999bfb9879
msgid ""
"Takes a coordinate and return the corresponding degrees, minutes_decimal, "
"minutes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 2aaf45a876b649dc8f6cbc0c056da931
msgid ""
":py:obj:`position_to_position_representation "
"<monitorfish.datascience.src.pipeline.helpers.spatial.position_to_position_representation>`\\"
" \\(p\\: Position\\, representation\\_type\\: str \\= \\'DMS\\'\\) → "
"PositionRepresentation"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 8a9fc21edb4244918fed2d50c9c6c7c4
msgid "Converts a `Position` to a `PositionRepresentation` in the designated"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: d5c99444196e40858995456a9ac94717
msgid ""
":py:obj:`to_multipolygon "
"<monitorfish.datascience.src.pipeline.helpers.spatial.to_multipolygon>`\\ "
"\\(p\\: Union\\[shapely.geometry.Polygon\\, "
"shapely.geometry.MultiPolygon\\]\\) → shapely.geometry.MultiPolygon"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:108
#: 738feb790d2445a9a3f6044a749c576b cd2c6811a8ff4449a4fb0f6d60016acc
msgid "Returns a MultiPolygon of the input Polygon or MultiPolygon geometry."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 919f94f066bb40d5a93d0418a2e4b6f4
msgid ""
":py:obj:`estimate_current_position "
"<monitorfish.datascience.src.pipeline.helpers.spatial.estimate_current_position>`\\"
" \\(last\\_latitude\\: float\\, last\\_longitude\\: float\\, course\\: "
"float\\, speed\\: float\\, hours\\_since\\_last\\_position\\: float\\, "
"max\\_hours\\_since\\_last\\_position\\: float \\= 2.0\\, on\\_error\\: str "
"\\= \\'ignore\\'\\) → Tuple\\[float\\, float\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 15b9981160db42378e829d6775a8e6dd
msgid ""
"Estimate the current position of a vessel based on its last position, course"
" and"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 3e3f270f301a45348dc38663231b834b
msgid ""
":py:obj:`get_h3_indices "
"<monitorfish.datascience.src.pipeline.helpers.spatial.get_h3_indices>`\\ "
"\\(df\\: pandas.DataFrame\\, lat\\: str \\= \\'latitude\\'\\, lon\\: str \\="
" \\'longitude\\'\\, resolution\\: int \\= 12\\) → pandas.Series"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 8e8f185049f24acea59f5f6bceb52755
msgid ""
"Returns a Series with the same index as the input DataFrame and values equal"
" to the"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 1d2dff5ac5c64f51a366153df5003492
msgid ""
":py:obj:`get_k_ring_of_h3_cells "
"<monitorfish.datascience.src.pipeline.helpers.spatial.get_k_ring_of_h3_cells>`\\"
" \\(h3\\_sequence\\: Iterable\\[str\\]\\, k\\: int\\) → Set\\[str\\]"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 5e7aeca1ccf24d88be34acb942652636
msgid ""
"Takes an list-like sequence of h3 cells and an integer k, returns the set of"
" h3"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 5dd7a9e8273041f7837544dea8aff140
msgid ""
":py:obj:`point_dist "
"<monitorfish.datascience.src.pipeline.helpers.spatial.point_dist>`\\ "
"\\(position1\\: Position\\, position2\\: Position\\) → float"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:178
#: 778869c17d95410aa1368200b1117b96 1ab020a213284c918f8a650df39f4b5a
msgid ""
"Computes the spherical distance between two Position objects in meters."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 371d02931eac4cf3844c225e8e2c5521
msgid ""
":py:obj:`get_step_distances "
"<monitorfish.datascience.src.pipeline.helpers.spatial.get_step_distances>`\\"
" \\(df\\: pandas.DataFrame\\, lat\\: str \\= \\'latitude\\'\\, lon\\: str "
"\\= \\'longitude\\'\\, how\\: str \\= \\'backward\\'\\, unit\\: str \\= "
"\\'m\\'\\) → numpy.array"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 0cfa33e90e15430f81dabb0f82384bb0
msgid ""
"Compute the distance between successive positions (rows). The DataFrame must"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 2738426efa6e497181b627b28cb7caff
msgid ""
":py:obj:`compute_movement_metrics "
"<monitorfish.datascience.src.pipeline.helpers.spatial.compute_movement_metrics>`\\"
" \\(positions\\: pandas.DataFrame\\, lat\\: str \\= \\'latitude\\'\\, lon\\:"
" str \\= \\'longitude\\'\\, datetime\\_column\\: str \\= "
"\\'datetime\\_utc\\'\\, is\\_at\\_port\\_column\\: str \\= "
"\\'is\\_at\\_port\\'\\, time\\_emitting\\_at\\_sea\\_column\\: str \\= "
"\\'time\\_emitting\\_at\\_sea\\'\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:214
#: 83a80d485825428090ae96e0c41effc4 2b189049df93462a88b209cbfbbb01ba
msgid "Takes a pandas DataFrame with:"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 8fcaea13263348a9895b05c3a9c8c96a
msgid ""
":py:obj:`detect_fishing_activity "
"<monitorfish.datascience.src.pipeline.helpers.spatial.detect_fishing_activity>`\\"
" \\(positions\\: pandas.DataFrame\\, "
"minimum\\_time\\_of\\_emission\\_at\\_sea\\: numpy.timedelta64\\, "
"is\\_at\\_port\\_column\\: str \\= \\'is\\_at\\_port\\'\\, "
"average\\_speed\\_column\\: str \\= \\'average\\_speed\\'\\, "
"time\\_emitting\\_at\\_sea\\_column\\: str \\= "
"\\'time\\_emitting\\_at\\_sea\\'\\, minimum\\_consecutive\\_positions\\: int"
" \\= 3\\, min\\_fishing\\_speed\\_threshold\\: float \\= 0.1\\, "
"max\\_fishing\\_speed\\_threshold\\: float \\= 4.5\\, return\\_floats\\: "
"bool \\= False\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:254
#: 4da01dade17c43c9a8c14c03996389f5 0666d14bb5a54155abc3bfb494539795
msgid "Detects fishing activity from positions of a vessel."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 410d9a8e00e04deeae27de9fa723456f
msgid ""
":py:obj:`enrich_positions "
"<monitorfish.datascience.src.pipeline.helpers.spatial.enrich_positions>`\\ "
"\\(positions\\: pandas.DataFrame\\, "
"minimum\\_time\\_of\\_emission\\_at\\_sea\\: numpy.timedelta64\\, lat\\: str"
" \\= \\'latitude\\'\\, lon\\: str \\= \\'longitude\\'\\, "
"datetime\\_column\\: str \\= \\'datetime\\_utc\\'\\, "
"is\\_at\\_port\\_column\\: str \\= \\'is\\_at\\_port\\'\\, "
"time\\_emitting\\_at\\_sea\\_column\\: str \\= "
"\\'time\\_emitting\\_at\\_sea\\'\\, minimum\\_consecutive\\_positions\\: int"
" \\= 3\\, min\\_fishing\\_speed\\_threshold\\: float \\= 0.1\\, "
"max\\_fishing\\_speed\\_threshold\\: float \\= 4.5\\, return\\_floats\\: "
"bool \\= False\\) → pandas.DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:309
#: b513e98a16054b669874a239e8bfa8b2 455991c7ed81473ab606c3bc8dcaa1c4
msgid ""
"Applies `compute_movement_metrics` and `detect_fishing_activity` "
"successively."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 1bfd5f4c0bc0467d8f3c6758cf40d6cf
msgid ""
":py:obj:`geocode "
"<monitorfish.datascience.src.pipeline.helpers.spatial.geocode>`\\ "
"\\(query\\_string\\=None\\, country\\_code\\_iso2\\=None\\, \\*\\*kwargs\\)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:39:<autosummary>:1
#: 5a5b98ca8a184573a46f823c6fbb1380
msgid ""
"Return latitude, longitude for input location from a query string or from "
"one or"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:70
#: 1edde89bc99c40848e45f5a0b051e537
msgid ""
"Takes a coordinate and return the corresponding degrees, minutes_decimal, "
"minutes and seconds. The sign is not taken into account - only returns "
"positive values."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: a24bd832575d46cca7172dee11212a67 5b0e86b6f23e4b358f249acb002249ea
#: a1590ba7aeda4d6aaca013767a2148ba f2cb520be51b4b3a990937f68545010b
#: dbf9fdcf5ed5460ba838cd115771357d a9e166573b0844308e8fdc9d2ad1fe41
#: c317a51e802f4ef3a8b292528559eb75 27e54ee271004ee6a3fc49913a69a2a6
#: b29a54c030ba4cc290159599315285a3
msgid "Parameters"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:73
#: d3e2b44ba34c4c3bb61e74642bea3728
msgid "latitude or longitude coordinate value"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: f5dde474d819490d8a724f9e9d2d2c1d 38635e1b1b3744ee9511d2ce5b36fdaa
#: bdc72a6fcdba448fba81708400e3f40e b483a52d7df64b8b9710dfa7199b49b9
#: 9018190e1bcd4219a0d1a76ab5a7783b 3d3dd29322294de6b677eb379792b7bf
#: 1e9d1c7fba5f4fc2b2f91e10ae75fe0b 9b2f525fd2544c4db97361726f393a44
#: ad0687f3109945e3a42661aaeec9c2fe
msgid "Returns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:76
#: 95e7f13598364f8cb4b2a8ef70dc6fe4
msgid "degrees, minutes_decimal, minutes, seconds"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: 030512996d0a4e8a84713cd87bf34ba3 f9e6c87be6134259b1281e542d020ca0
#: 5d9e51b1d1844b2daf8c081099e42f12 51a55365bdb748d09e8d6485e95ca28c
#: c799f4b7f5744214b15bee0c33343dc2 4483a671bf0a42d7bc9df195f6f70165
#: 0e07b3c4f3dd4e2fbb3caee7ce171cf6 6d1a6a31860745329e2109843d0cb760
msgid "Return type"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:80
#: 945ff7a5aaf1417c9a65f52cf16880e6
msgid "Examples"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:89
#: da19255f9fbb4f56a784ccfb1200afdd
msgid ""
"Converts a `Position` to a `PositionRepresentation` in the designated "
"`representation_type`."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:92
#: 0240369020714d4abe1717561e05c70b
msgid "input `Position`"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:94
#: 78dc966d9ea549b28c21753beba5cd88
msgid "\"DMS\" or \"DMD\". Defaults to \"DMS\"."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:97
#: bbf28871498c445eb78f90717fa0e7af
msgid "PositionRepresentation"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:0
#: 5a003f505cdd4a3fb27ce155a4de5e26
msgid "Raises"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:99
#: 04a1c6dc9991432da1329fd0988e3d29
msgid ""
"if :  - `lat` is greater than 90.0 and less than -90.0 - `lon` is greater "
"than 180.0 and less than -180.0 - `representation_type` is not 'DMD' or "
"'DMS'."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:99
#: 81942a70ae9b42338393fdbecbc2bd79
msgid "if :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:101
#: 9e9ac993305f4d849120f5b0a84641b9
msgid "`lat` is greater than 90.0 and less than -90.0"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:102
#: c253137e206c4ed19e1d071720ba8629
msgid "`lon` is greater than 180.0 and less than -180.0"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:103
#: 17ae44bdcb8144178b1343428f889fbf
msgid "`representation_type` is not 'DMD' or 'DMS'."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:113
#: e0edfbf718374cc68534a32ba24798ea
msgid ""
"Estimate the current position of a vessel based on its last position, course"
" and speed. If the last position is older than "
"max_hours_since_last_position, or is in the future (i.e. "
"hours_since_last_position is negative), returns None."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:117
#: b75fd9b691c144319744960b2f51cb5f
msgid "last known latitude of vessel"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:119
#: 6748544f95944abbb2030874ab8a4753
msgid "last known longitude of vessel"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:121
#: 5abd5923d3c548d093a81c69208ea0cf
msgid "last known route of vessel in degrees"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:123
#: 441b8a1c2ae34c1c98096cedab782a48
msgid "last known speed of vessel in nots"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:125
#: 6819d2e2a70c4f01aed05f3c0e7c287c
msgid "time since last known position of vessel, in hours"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:128
#: 5e4ab813abe94fbf8dd9647bf4007fc7
msgid ""
"maximum time in hours since last position, after which the estimation is not"
" performed (returns None instead) Defaults to 2.0"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:132
#: 5ec5f5deb76e4dac91bafc2eaca32ffd
msgid "'ignore' or 'raise'"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:135
#: 5367f5cf554e4ea3ae928e8c9d5e4de7
msgid "estimated current latitude float: estimated current longitude"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:142
#: 49e7946833ab4880be2d21d8e9c1af01
msgid ""
"Returns a Series with the same index as the input DataFrame and values equal"
" to the h3 index corresponding to the latitude and longitude of the "
"indicated columns of the DataFrame"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:146
#: e1ff2afece814048b5c3c7201ea0de85
msgid "DataFrame with latitude and longitude coordinates in 2 of its columns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:149
#: a02b762e323b497cbf8f3ab5bfd5c353
msgid "name of the column containing latitudes. Defaults to \"latitude\"."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:151
#: 934d8454d4d44634ab76def1cb48aa9d
msgid "name of the column containing longitudes. Defaults to \"longitude\"."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:153
#: adfda53ca0204f6f92c5fb8cb1a382d6
msgid "h3 resolution of the h3 cells to output."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:156
#: fd321b190a954ba3901543910d91bcb3
msgid "h3 cells indices"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:162
#: 1a53b274313640fdaec700fda4b79e43
msgid ""
"Takes an list-like sequence of h3 cells and an integer k, returns the set of"
" h3 cells that belong to the k-ring of at least one of the h3 cells in the "
"input sequence."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:166
#: aeb5bbdda527427483571d53cfa98a2b
msgid "sequence of h3 cells"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:168
#: 5ccdb672a0e64d3fa830638d3f1d5002
msgid "number of rings to add around the input cells"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:171
#: 9beb99988fc346b59afd14564ab75e81
msgid ""
"sequence of h3 cells belonging to the k-ring of at least one of the h3 cells"
" in the input sequence"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:185
#: 228ef2baed9e4d9bbee666da1fbe84fe
msgid "distance in meters between the two input Positions"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:191
#: 8141baa491e54fa1ba8c51c4b44e835d
msgid ""
"Compute the distance between successive positions (rows). The DataFrame must"
" have latitude and longitude columns. Returns a numpy array with the same "
"length as the input DataFrame and distances as values."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:197
#: ae8946463b684048902b5ad130e88aa4
msgid "column name containing latitudes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:199
#: 520fdd6ff6524c07aa177fd5f98c639d
msgid "column name containing longitudes"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:201
#: c7b53b9905144fafac983b6ec547a6a0
msgid ""
"if, 'forward', computes the interval between each position and the next one."
" if 'backward', computes the interval between each position and the previous"
" one."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:205
#: 8bba293ebaad44bf96c50795653e3238
msgid "the distance unit (passed to h3.point_dist). Defaults to 'm'."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:208
#: db3c7f4c391a4a9daafcdbf533fe12ed
msgid "array of distances between the successive positions."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:216
#: 18f465745e9a48e8ac246e729804d523
msgid "latitude and longitude columns (float dtypes)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:217
#: 1694c00105e840c78872b278145bf3a6
msgid "a column indicating the date and time of the position (datetime dtype)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:218
#: 5fff5433ebdf4ced8aeb9db19150c8c5
msgid "a column indicating whether the vessel is at port (boolean dtype)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:219
#: 7ee807d3edd4430faa579a1fa249b3d2
msgid ""
"a column indicating how long the vessel has been continuously emitting at "
"sea (timedelta dtype)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:222
#: 781875ee102342ea8ad893e27a9378af
msgid ""
"whose rows represent successive positions of a vessel, assumed to be sorted "
"chronologically by ascending order."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:225
#: 703854248a704adc9aa4fb9a81627996
msgid "Returns pandas DataFrame with the same index and columns, with :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:227
#: 169ab366188f4c5ab7ba7dadf8553211
msgid ""
"speed, distance and time between successive positions as additionnal "
"computed features in new columns"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:229
#: 60406592dc3e4b3abcad71729969387b
msgid ""
"values for `time_emitting_at_sea_column` computed and updated - so if the "
"input contained any NULL values, they will be computed and filled in."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:232
#: 9a3ab671a9d14f11bc0efd2cb176bbbc
msgid "DataFrame representing a vessel route"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:234
#: 40586c803f6b4a7b9f13c230ad32b0f5
msgid "column name of latitude values. May not contain null values."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:236
#: 9dfc454d968b477f95fbda77935e41d6
msgid "column name of longitude values. May not contain null values."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:238
#: 608be143259a4403b603e7ce90a122cb
msgid "column name of datetime values. May not contain null values."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:241
#: 39009ea985d74bb69e658428ef9c2ce5
msgid ""
"column indicating whether the vessel is at port. May not contain null "
"values."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:244
#: 8d8c0d326b364deda3fc9dcc1a5363c3
msgid ""
"column indicating how long the vessel has been continuously emitting at sea."
" May contain null values."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:248
#: 7023b996e76843959fb3854c666635ba
msgid "the same DataFrame, plus added columns with the computed features"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:256
#: 381fdc9719ea4d0a85c7763b9192d273
msgid ""
"Rows of the input DataFrame represent successive positions of the analyzed "
"vessel, assumed to be sorted chronologically by ascending order."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:259
#: 6b7e88d933674653a43597741142cfcb
msgid "The DataFrame must have a columns indicating :"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:261
#: 132b336cea494c23a65a37702443c269
msgid "whether the position is at port"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:262
#: 54a50a3c2c49469ba99522d377e2edf4
msgid "the average speed between each position and the previous one, in knots"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:264
#: 25fd1dd4cd72411fb9a7839a546da23a
msgid ""
"A vessel will be considered to be fishing if its average speed remains above"
" the `min_fishing_speed_threshold` and below the "
"`max_fishing_speed_threshold` for a minimum of "
"`minimum_consecutive_positions` positions outside a port and after at least "
"`minimum_time_of_emission_at_sea` time of uninterrupted VMS emission outside"
" of a port."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:270
#: a34686754e4e4bf99bc09a784673cecd
msgid ""
"DataFrame representing successive positions of a vessel, assumed to be "
"sorted by ascending datetime"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:273
#: 15a77189f9004ddfaf82107422e6374f
msgid ""
"the minimum time a vessel is required to emit continuously at sea in order "
"to be considred as in fishing activity. This avoids detecting fishing "
"activity when vessels leave ports."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:277
#: 6106c489b368472cb36ddc21cc66f2d2
msgid ""
"name of the column containing boolean values for whether a position is in at"
" port or not"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:280
#: 0c449754d1884e928533434907a11a25
msgid ""
"name of the column containing average speed values (distance from previous "
"position divided by time since the last position), in knots"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:284
#: c43d8ec78e9b46a3b700bd436a698ca4
msgid ""
"name of the column containing the duration for which the vessel has been "
"continuously emitting at sea (outside ports)"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:287
#: fe3e932eaa6d4998afd3ace1c73061ee
msgid ""
"minimum number of consecutive positions below fishing speed threshold to "
"consider that a vessel is fishing"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:290
#: e96f0816c7a34b67a281ab90fd30714b
msgid "speed below which a vessel is considered to be stopped"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:293
#: df636e34c1eb4b6588601152ebf37fae
msgid "speed above which a vessel is considered to be in transit"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:296
#: 856db4353a844c958742cf729ad9cedc
msgid ""
"if `True`, return `float` dtypes with 1.0 representing `True`, 0.0 "
"representing `False` and `np.nan` for null values. If `False` (the default),"
" the return dtype is `object` and values are `True`, `False` and `np.nan`, "
"which is more explicit and natural but slower."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:302
#: 3a70da8f4a18486d920fd5c57089066c
msgid "copy of the input DataFrame with the added boolean column \"is_fishing\""
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:311
#: acd9a503abe14de2ad7dfff0a1e83cfc
msgid "See these two functions for help."
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:316
#: d4be00d327f3469b8f77c2bd0d747140
msgid ""
"Return latitude, longitude for input location from a query string or from "
"one or more of the following keyword arguments:"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:319
#: d44626564ac54a6481209d32a1b637f9
msgid "street"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:320
#: 2673790eb7e64564a0cf040403b76655
msgid "city"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:321
#: 48cdd8f797f64cdd91123347ae9ed698
msgid "county"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:322
#: 0998a5e83bdd460ea178c0e2424146ca
msgid "state"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:323
#: de483e95f80548c88a98935adee72786
msgid "country"
msgstr ""

#: ../source/autoapi/monitorfish/datascience/src/pipeline/helpers/spatial/index.rst:324
#: 3d417aa86c604003a4bfe8b8d161bfb1
msgid "postalcode"
msgstr ""
