version: "3"
services:
  db:
    image: timescale/timescaledb-postgis:1.7.4-pg11
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=monitorfishdb
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 30

  flyway:
    image: flyway/flyway
    command: migrate -password=postgres -schemas=public -user=postgres -url=jdbc:postgresql://db:5432/monitorfishdb
    volumes:
      - ../../backend/src/main/resources/db/:/flyway/sql
    depends_on:
      db:
        condition: service_healthy

  geoserver:
    image: kartoza/geoserver:2.18.0
    restart: unless-stopped
    ports:
      - 8081:8080
    links:
      - "db:db"
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --fail http://localhost:8080/geoserver/wfs?service=WFS&version=1.1.0&request=GetFeature&typename=monitorfish:regulations&outputFormat=application/json&CQL_FILTER=topic=%27Ouest%20Cotentin%20Bivalves%27%20AND%20zone=%27Praires%20Ouest%20cotentin%27 || exit 1 ",
        ]
      interval: 1s
      timeout: 1s
      retries: 30
#
##  prometheus:
#    ports:
#      - 9090:9090
#    image: prom/prometheus
#    container_name: prometheus
#    volumes:
#      - ./prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus-data:/prometheus
#
#  grafana:
#    image: grafana/grafana
#    container_name: grafana
#    ports:
#      - 9000:3000
#    volumes:
#      - grafana-data:/var/lib/grafana
#      - ./grafana-datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=admin
#      - GF_USERS_ALLOW_SIGN_UP=false
#    depends_on:
#      - prometheus
#
#  dockerhost:
#    image: qoomon/docker-host
#    cap_add: [ 'NET_ADMIN', 'NET_RAW' ]
#    restart: on-failure

volumes:
  geoserver-data:
    driver: local
  db-data:
    driver: local
#  prometheus-data:
#    driver: local
#  grafana-data:
#    driver: local
